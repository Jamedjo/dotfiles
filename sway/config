# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
# Run `xev` to find key names for bindsym

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
set $term_run foot -e zsh -c
set $browser GDK_BACKEND=wayland /sbin/firefox
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show=drun | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/local/share/backgrounds/sway/)
#output * bg /home/james/Pictures/lockscreen.jpg fill
#output eDP-1 bg /home/james/Pictures/seven-commandos-beach-el-nido.png fill
#output * bg /home/james/Pictures/desktop9.png fill
#output * bg /home/james/Pictures/desktop8.png fill
#output * bg /home/james/Pictures/desktop7.png fill
#output * bg /home/james/Pictures/desktop5.png fill
#output * bg /home/james/Pictures/desktop4.png fill
output * bg /home/james/Pictures/lockscreen.png fill
#output eDP-1 bg /home/james/Pictures/desktop.png fill
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#output eDP-1 mode --custom 1920x1080
#output eDP-1 scale 2
output DP-1 scale 2
output WL-1 resolution 1920x1050
output "Goldstar Company Ltd LG TV 0x00000101" resolution 4096x2160

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#bindsym $mod+Shift+x exec swaylock
set $lock swaylock -f
bindsym $mod+l exec $lock
exec swayidle -w timeout 300 '$lock' before-sleep '$lock' lock '$lock' timeout 600 'systemctl suspend'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * xkb_layout gb
#input "2:7:SynPS/2_Synaptics_TouchPad" {
input "1739:31251:SYNA2393:00_06CB:7A13_Touchpad" {
    tap enabled
    middle_emulation enabled
    natural_scroll enabled
    scroll_factor 0.4
    accel_profile adaptive
    pointer_accel 0.8
}

# Swipe to change workspace
exec libinput-gestures-setup stop && libinput-gestures-setup start

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # start a browser
    bindsym $mod+Shift+Return exec $browser

    # kill focused window
    bindsym $mod+q kill

    # start your launcher
    bindsym $mod+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

#
# Moving around:
#
    # Move your focus around
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # name workspaces
    set $workspace1 "1"
    set $workspace2 "2"
    set $workspace3 "3"
    set $workspace4 "4"
    set $workspace5 "5"
    set $workspace6 "6"
    set $workspace7 "7"
    set $workspace8 "8"
    set $workspace9 "9"
    set $workspace10 "10"
    set $workspace11 "11"
    set $workspace12 "12"
    set $workspace12 "12"
    set $workspace13 "13"
    set $workspace14 "14"
    set $workspace15 "15"
    set $workspace16 "16"
    set $workspace17 "17"
    set $workspace18 "18"
    set $workspace19 "19"
    set $workspace20 "20"
    #set $workspace1 "1: "
    #set $workspace2 "2: "
    #set $workspace3 "3: "
    #set $workspace4 "4: "
    #set $workspace5 "5: "
    #set $workspace6 "6: "
    #set $workspace7 "7: "
    #set $workspace8 "8: "
    #set $workspace9 "9: Nine"
    #set $workspace10 "10: Ten"

    set $notes $workspace9
    set $web $workspace5
    set $chat $workspace8

    # switch to workspace
    bindsym $mod+1 workspace $workspace1
    bindsym $mod+2 workspace $workspace2
    bindsym $mod+3 workspace $workspace3
    bindsym $mod+4 workspace $workspace4
    bindsym $mod+5 workspace $workspace5
    bindsym $mod+6 workspace $workspace6
    bindsym $mod+7 workspace $workspace7
    bindsym $mod+8 workspace $workspace8
    bindsym $mod+9 workspace $workspace9
    bindsym $mod+0 workspace $workspace10
    bindsym $mod+Alt+1 workspace $workspace11
    bindsym $mod+Alt+2 workspace $workspace12
    bindsym $mod+Alt+3 workspace $workspace13
    bindsym $mod+Alt+4 workspace $workspace14
    bindsym $mod+Alt+5 workspace $workspace15
    bindsym $mod+Alt+6 workspace $workspace16
    bindsym $mod+Alt+7 workspace $workspace17
    bindsym $mod+Alt+8 workspace $workspace18
    bindsym $mod+Alt+9 workspace $workspace19
    bindsym $mod+Alt+0 workspace $workspace20
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $workspace1
    bindsym $mod+Shift+2 move container to workspace $workspace2
    bindsym $mod+Shift+3 move container to workspace $workspace3
    bindsym $mod+Shift+4 move container to workspace $workspace4
    bindsym $mod+Shift+5 move container to workspace $workspace5
    bindsym $mod+Shift+6 move container to workspace $workspace6
    bindsym $mod+Shift+7 move container to workspace $workspace7
    bindsym $mod+Shift+8 move container to workspace $workspace8
    bindsym $mod+Shift+9 move container to workspace $workspace9
    bindsym $mod+Shift+0 move container to workspace $workspace10
    bindsym $mod+Shift+Alt+1 move container to workspace $workspace11
    bindsym $mod+Shift+Alt+2 move container to workspace $workspace12
    bindsym $mod+Shift+Alt+3 move container to workspace $workspace13
    bindsym $mod+Shift+Alt+4 move container to workspace $workspace14
    bindsym $mod+Shift+Alt+5 move container to workspace $workspace15
    bindsym $mod+Shift+Alt+6 move container to workspace $workspace16
    bindsym $mod+Shift+Alt+7 move container to workspace $workspace17
    bindsym $mod+Shift+Alt+8 move container to workspace $workspace18
    bindsym $mod+Shift+Alt+9 move container to workspace $workspace19
    bindsym $mod+Shift+Alt+0 move container to workspace $workspace20

    # Select container to focus
    for_window [title=fuzzy-tab] floating enable
    bindsym $mod+Tab exec foot --title 'fuzzy-tab' -e zsh -c 'source ~/.fzf.zsh && swaymsg -t get_tree | jq -r "recurse(.nodes[]?) | select(.type == \\"con\\") | [.id, .app_id, .name] | @tsv" | fzf --reverse --with-nth=2.. | awk "{print \$1}" | xargs -r -I ID swaymsg "[con_id=ID]" focus'

    # Move container to fzf workspace
    for_window [title=fuzzy-workspace] floating enable
    #TODO: Should work for current container not new float
    bindsym $mod+Shift+grave exec foot --title 'fuzzy-workspace' -e zsh -c "source ~/.fzf.zsh && swaymsg -t get_workspaces | jq -r '.[] | select(.focused? != true) | .name' | fzf --reverse | xargs -r -I NAME swaymsg move container to workspace NAME"
    #bindsym Mod4+grave exec -- foot --title fuzzy-workspace -e zsh -c '\\"source ~/.fzf.zsh && swaymsg -t get_workspaces | jq -r '"'.[] | select(.focused? != true) | .name'"' | fzf --reverse | xargs -r -I NAME swaymsg move container to workspace NAME\\"'

    # Focus fzf workspace
    bindsym $mod+grave exec foot --title 'fuzzy-workspace' -e zsh -c "source ~/.fzf.zsh && swaymsg -t get_workspaces | jq -r '.[] | select(.focused? != true) | .name' | fzf --reverse | xargs -r -I NAME swaymsg workspace NAME"

    # Move workspace to another screen with fzf
    bindsym $mod+Shift+w exec $term_run "source ~/.fzf.zsh && swaymsg -t get_outputs | jq -r '.[] | select(.focused!=true) | [.name, .make, .model] | @tsv' | fzf --select-1 --reverse --prompt='Move workspace to:' | awk '{print $1}' | xargs -r swaymsg move workspace to"

    # Move workspace to next screen/output
    bindsym $mod+Alt+w exec swaymsg -t get_outputs | jq '.[] | .name' | sed -n "1p;/`swaymsg -t get_outputs | jq '.[] | select(.focused==true) | .name'`/{n;p;}" | tail -n1 | xargs swaymsg move workspace to

    for_window [class='Xmessage'] floating enable
    for_window [class='Xmessage'] sticky enable

    # Rotate current workspace
    bindsym $mod+Shift+r output - transform 90 clockwise

# Window assignments
#
    #exec slack
    assign [class="Slack"] workspace $chat

    # Load urxvt theme and plugins
    exec xrdb ~/.Xresources
    #exec xrdb ~/.Xresources && urxvt -title 'TODO' -e 'vim' '/home/james/todo.txt'
    #assign [title='TODO'] workspace $workspace5

    exec simplenote
    assign [class="Simplenote"] workspace $notes
    exec /opt/Todoist/todoist
    assign [class="Todoist"] workspace $notes

    #exec thunderbird
    #assign [class="Thunderbird"] workspace $workspace1

    exec swaymsg workspace $web

    bindsym $mod+Shift+f exec $term_run 'sleep 0.1 && vim /home/james/.config/focuslock/current'
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+t floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+t focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
bindsym $mod+bracketleft resize shrink width 10px
bindsym $mod+bracketright resize grow width 10px

Set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec systemctl suspend, mode "default"
    bindsym h exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"
    bindsym Shift+r exec systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

# exit sway (logs you out of your Wayland session)
#bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Laptop special keys
#
# Taken from https://wiki.archlinux.org/index.php/Sway#From_a_display_manager
#
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl set-sink-mute @DEFAULT_SINK@ 0
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec sudo brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec sudo brightnessctl set +5%
bindsym Print exec grim -g "$(slurp)" /home/james/Screenshots/$(date +'screenshot_%F-%H_%M_%S.png')
bindsym Alt+Print exec grim -c /home/james/Screenshots/$(date +'screenshot_%F-%T.png')
bindsym Shift+Print exec /home/james/Scripts/screencap_tray.py

#
# Custom scripts
#
bindsym $mod+Alt+c exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy
#bindsym $mod+Alt+d exec
# Ideas: Connect bluetooth headset, toggle gaps, ...

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

# See: https://github.com/Alexays/Waybar/issues/63
for_window [app_id="waybar" floating] {
    #move position cursor
    #move down 158px # Adjust manually so menus fit
    move absolute position 1630 25
}

gaps inner 5
smart_gaps off
smart_borders on
focus_follows_mouse no

default_border pixel 2
title_align center

# class                 border    backgr.   text    indicator child_border
client.focused          #9a61b3f5 #9a61b3f5 #FFFFFF #ce83e6FF   #9a61b355
client.unfocused        #171717f5 #171717f5 #ffffff #00000000 #171717F5
client.focused_inactive #131313f5 #131313f5 #D8A881 #00000000 #171717F5
#client.focused_tab_title

#exec spotify

# ULauncher listens from a background process
exec GDK_BACKEND=wayland ulauncher --hide-window
for_window [app_id="ulauncher"] floating enable, border none

# Android Remote Control/transfer
exec /usr/lib/x86_64-linux-gnu/libexec/kdeconnectd
exec indicator-kdeconnect

for_window [class=zoom title=Settings] floating enable

# Link primary text selection and main clipboard
#exec autocutsel

# Notifications
exec mako
exec swaynag-battery --interval 10s

# Time tracking
#exec rescuetime

# Ensure xdg-desktop-portal-wlr knows which wayland instance to use
exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP

include /usr/local/etc/sway/config.d/*

